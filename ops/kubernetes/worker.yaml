apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: server
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: server
      labels:
        name: django
    spec:
      containers:
        - name: server
          image: docker.io/jwnwilson/modular_server:1.0.0
          imagePullPolicy: Always
          command: [
            "make", "worker"
          ]
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: "500Mi"
              cpu: "0.05"
            limits:
              memory: "1Gi"
              cpu: "0.35"
          tty: true
          volumeMounts:
            - mountPath: /app/src/server/media
              name: media
          workingDir: /app/src/server
          env:
            - name: ENV
              value: prod
            - name: DJANGO_SECRET_KEY
              value: REPLACE_ME
            - name: POSTGRES_HOST
              value: 127.0.0.1
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: s3_access_key
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: s3_secret
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
status: {}

---

apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    name: django
spec:
  ports:
    - name: "server"
      port: 8000
      targetPort: 8000
  selector:
    name: django
  type: NodePort
status:
  loadBalancer: {}
